<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://joszuijderwijk.nl/feed.xml" rel="self" type="application/atom+xml"/><link href="https://joszuijderwijk.nl/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-08-14T15:40:11+00:00</updated><id>https://joszuijderwijk.nl/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Smart Traffic Light: Setting Up an IoT System</title><link href="https://joszuijderwijk.nl/blog/traffic-light-1/" rel="alternate" type="text/html" title="Smart Traffic Light: Setting Up an IoT System"/><published>2021-01-21T00:00:00+00:00</published><updated>2021-01-21T00:00:00+00:00</updated><id>https://joszuijderwijk.nl/blog/traffic-light-1</id><content type="html" xml:base="https://joszuijderwijk.nl/blog/traffic-light-1/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/traffic-light-1-480.webp 480w,/assets/img/traffic-light-1-800.webp 800w,/assets/img/traffic-light-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/traffic-light-1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="introduction">Introduction</h2> <p>Welcome to the first installment of our smart traffic light series! In this post, we‚Äôll explore how to create a simple IoT network for a traffic light system. We‚Äôll cover the basics of setting up the network, and in future posts, we‚Äôll dive into building a <a href="../traffic-light-2">proof of concept</a> and a <a href="../traffic-light-3">full-size version</a> of our smart traffic light.</p> <h2 id="background-the-rowing-ban-system">Background: The Rowing Ban System</h2> <p>As a member of the <em>Webcie</em> at <a href="http://orcaroeien.nl">A.U.S.R. Orca</a>, a student rowing club, I‚Äôve been involved in developing and maintaining the club‚Äôs websites. One of our key projects is the <em>Member Portal</em><sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>, which includes a feature for administrators to broadcast rowing bans. These bans indicate whether it‚Äôs safe or permitted to row, based on factors like weather conditions or scheduled events.</p> <p>The rowing ban status can be represented by a traffic light system:</p> <ul> <li>üü¢ Green: No rowing ban</li> <li>üü† Orange: Partial rowing ban (e.g., only single sculls allowed)</li> <li>üî¥ Red: Full rowing ban (no rowing allowed)</li> </ul> <p>Our goal is to create a physical traffic light that automatically displays the current rowing ban status. This tangible representation will serve as an eye-catching and practical addition to the club‚Äôs information system.</p> <h2 id="building-the-iot-network">Building the IoT Network</h2> <p>To bring our smart traffic light to life, we need a robust infrastructure that enables communication between devices. We‚Äôll use the <a href="https://en.wikipedia.org/wiki/MQTT">MQTT</a> (Message Queuing Telemetry Transport) protocol, which is ideal for IoT applications due to its lightweight nature and publish-subscribe model.</p> <h3 id="understanding-mqtt">Understanding MQTT</h3> <p>MQTT revolves around a central server called a <em>broker</em>, which manages communication between connected devices (clients). Here‚Äôs a simplified overview of our network:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/traffic-light-diagram-1-480.webp 480w,/assets/img/traffic-light-diagram-1-800.webp 800w,/assets/img/traffic-light-diagram-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/traffic-light-diagram-1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 1: Schematic overview of the IoT network. </div> <p><strong>Backend</strong>, <strong>Database</strong> and <strong>Frontend</strong> are all components of the previously mentioned member portal. The user (admin) activates a certain rowing ban by pushing a button on the frontend. This triggers an action on the backend, adding the new ban to the database. The frontend now displays the new ban that is stored in the database. These components are specific to the Orca use case and could be replaced by any other system.</p> <p>Both <strong>Traffic Light</strong> (our device) and <strong>Backend</strong> (of the member portal) are clients connected to the broker.</p> <p>MQTT uses <em>topics</em> to organize information. Clients publish messages to specific topics and subscribe to topics they want to receive messages from. For example:</p> <ul> <li>Publishing topic: <code class="language-plaintext highlighter-rouge">bans/status</code></li> <li>Subscription topic: <code class="language-plaintext highlighter-rouge">bans/#</code> (using a wildcard to receive all messages under the ‚Äúbans‚Äù topic)</li> </ul> <p>An important feature of MQTT is the option of <em>retained messages</em>. The broker can save the last message sent to a topic, ensuring new clients receive the most recent information upon connecting. This is crucial for rowing bans; otherwise the device would only be able to detect the rowing ban the moment it changes.</p> <h3 id="setting-up-the-broker">Setting Up the Broker</h3> <p>In the past I‚Äôve been using <a href="https://www.cloudmqtt.com/">CloudMQTT</a> for experimenting, but they recently shut down their free plans (cheapest plan is now $5 per month). <a href="https://myqtthub.com/en">MyQttHub</a>, <a href="https://www.hivemq.com/">HiveMQ</a> and <a href="https://flespi.com/mqtt-broker">Flespi</a> look promising, although I‚Äôve never used any of them.</p> <p>For our project, we‚Äôll use <a href="https://mosquitto.org/">Mosquitto</a>, a popular open-source MQTT broker. While there are cloud-based options available, setting up your own broker provides more control and is cheaper in the long run. Setting up your own broker is fairly easy to do, but it requires some configuration and of course your own server.</p> <h3 id="implementing-access-control">Implementing Access Control</h3> <p>To secure our system, we‚Äôll create three user accounts with specific permissions:</p> <ol> <li><strong>webmaster</strong>: Admin account with full access<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup></li> <li><strong>ledenportaal</strong>: Account for the Member Portal</li> <li><strong>orca</strong>: Account for client devices (e.g., the traffic light)</li> </ol> <p>We‚Äôll use an Access Control List (ACL) to restrict these accounts. Here‚Äôs a sample ACL configuration:</p> <pre><code class="language-plain"># Admin account
user webmaster
topic readwrite #

# Member Portal account
user ledenportaal
topic readwrite vvb/status

# Client devices account
user orca
topic read vvb/status
topic write connection/#
</code></pre> <p><a href="http://www.steves-internet-guide.com/topic-restriction-mosquitto-configuration/">This blogpost</a> explains ACL for Mosquitto more thoroughly.</p> <h3 id="publishing-the-rowing-ban-status">Publishing the Rowing Ban Status</h3> <p>To integrate the rowing ban system with our MQTT network, we used the <a href="https://github.com/chkr1011/MQTTnet">MQTTnet</a> library in our ASP.NET Core backend. This allows us to publish updates to the broker whenever the rowing ban status changes.</p> <p>Remember, you could take anything as input for your traffic light! For example, the current rowing ban of your own sports club, <a href="https://kanikeenkortebroekaan">kanikeenkortebroekaan.nl</a>, or just hook it up to your own smart home network.</p> <h2 id="conclusion-and-next-steps">Conclusion and Next Steps</h2> <p>We‚Äôve now laid the groundwork for our smart traffic light system by setting up an IoT network using MQTT. To recap, we‚Äôve covered:</p> <ol> <li>The concept of using a traffic light to display rowing ban status;</li> <li>MQTT basics and network architecture;</li> <li>Setting up an MQTT broker;</li> <li>Implementing access control for security;</li> <li>Publishing rowing ban updates to the network.</li> </ol> <p>In our next post, we‚Äôll build a prototype of the traffic light, bringing our IoT concept to life. Stay tuned!</p> <hr/> <p><em>This post is part of a series on building a smart traffic light. Check out the upcoming posts for the prototype build and full-size implementation!</em></p> <hr/> <div class="footnotes" role="doc-endnotes"> <ol> <li id="fn:1" role="doc-endnote"> <p>The member portal (‚ÄúLedenportaal‚Äù), located at <a href="mijn.orcaroeien.nl">mijn.orcaroeien.nl</a>, is a private website for members of the club. It‚Äôs used for boat reservations, articles et cetera.¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> <li id="fn:2" role="doc-endnote"> <p>With software like <a href="https://mqtt-explorer.com/">MQTT Explorer</a> it‚Äôs really easy to send test messages and have an overview of the traffic that goes through your broker¬†<a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> </ol> </div>]]></content><author><name></name></author><category term="iot,"/><category term="projects"/><category term="iot,"/><category term="mqtt,"/><category term="mosquitto,"/><category term="rowing,"/><category term="traffic-light"/><summary type="html"><![CDATA[Learn how to create an IoT network for a smart traffic light.]]></summary></entry><entry><title type="html">Lenker</title><link href="https://joszuijderwijk.nl/blog/lenker/" rel="alternate" type="text/html" title="Lenker"/><published>2020-12-31T00:00:00+00:00</published><updated>2020-12-31T00:00:00+00:00</updated><id>https://joszuijderwijk.nl/blog/lenker</id><content type="html" xml:base="https://joszuijderwijk.nl/blog/lenker/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/lenker-480.webp 480w,/assets/img/lenker-800.webp 800w,/assets/img/lenker-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/lenker.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>In de kerstvakantie had ik wat tijd om wijselijk te spenderen, dus ik besloot om een extensie voor Chrome te maken. Ge√Ønspireerd op het gamekanaal van¬†<a href="http://speedrunners.nl/">Lekker Spelen</a>¬†en de alom bekende filmpjes van¬†<a href="http://www.mastermovies.nl/">MasterMovies</a>, presenteer ik u:¬†<strong>Lenker</strong>‚Ñ¢.</p> <h3 id="maakt-het-internet-malser"><em>Maakt het internet malser</em></h3> <p>Is het niet ‚Äòkinker‚Äô in plaats van ‚Äòkikker‚Äô? En is Born to be Alive niet gewoon van The Village People? Vraag jij je ook af waarom deze (en veel meer) van dit soort fouten continu gemaakt worden? Dat snamp ik wel. Met deze extensie wordt het mogelijk om voor eens en voor altijd af te rekenen met deze wijdverbreide misverstanden. Deze puike plugin stelt je ook in staat om bij te houden hoeveel woorden je al hebt verlenkerd. Helemaal niet genk!</p> <h3 id="patronen">Patronen</h3> <p>Deze plugin `verlenkert‚Äô automatisch woorden op alle websites die je bezoekt voor de ultieme leeservaring. Daarvoor gebruik ik een lijstje simpele regex-regels.</p> <details> <summary>Patronen</summary> <pre><code class="lang-javascript"><span class="hljs-keyword">var</span> dict = {
    <span class="hljs-string">"bloemen\\b"</span>: <span class="hljs-string">"bloempies"</span>,     <span class="hljs-comment">//uitzonderingen</span>
    <span class="hljs-string">"harry potter"</span>:<span class="hljs-string">"Barry Pooter"</span>,
    <span class="hljs-string">"private ryan"</span>: <span class="hljs-string">"Private Henk"</span>,
    <span class="hljs-string">"the matrix"</span>:<span class="hljs-string">"The Meetrix"</span>,
    <span class="hljs-string">"patrick hernandez"</span>: <span class="hljs-string">"The Village People"</span>,
    <span class="hljs-string">"bassie en adriaan"</span>: <span class="hljs-string">"Arie en Bastiaan"</span>,
    <span class="hljs-string">"knight rider"</span>:<span class="hljs-string">"Nicht Rijder"</span>,
    <span class="hljs-string">"eminem"</span>:<span class="hljs-string">"Aminam"</span>,
    <span class="hljs-string">"baywatch"</span>:<span class="hljs-string">"Zeebats"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)kk"</span>: <span class="hljs-string">"nk"</span>,           <span class="hljs-comment">// patronen</span>
    <span class="hljs-string">"(?&lt;=\\w+)ck"</span>: <span class="hljs-string">"nck"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)kje"</span>: <span class="hljs-string">"nkie"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)pje"</span>: <span class="hljs-string">"mpie"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)oek"</span> : <span class="hljs-string">"oenk"</span>,
    <span class="hljs-string">"(?&lt;=\\b[b-df-hj-np-tv-z]+)ut(t?)"</span> : <span class="hljs-string">"unt"</span>,
    <span class="hljs-string">"(?&lt;!aa)(?&lt;=a)dd"</span> : <span class="hljs-string">"nd"</span>,
    <span class="hljs-string">"(?&lt;![aa|\\b\W+])(?&lt;=a)d(?!e)"</span> : <span class="hljs-string">"nd"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)esse\\b"</span> : <span class="hljs-string">"ense"</span>,
    <span class="hljs-string">"(?&lt;=\\b[b-df-hj-np-tv-z]+)arr(?=(y|ie))(?!y\\040pooter)"</span>:<span class="hljs-string">"anr"</span>,
    <span class="hljs-string">"(?&lt;!(bro|ho))(?&lt;=\\b[b-df-hj-np-tv-z]*o)s(s?)\\b"</span> : <span class="hljs-string">"ns"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)ott(?=\\w+)"</span>:<span class="hljs-string">"ont"</span>,
    <span class="hljs-string">"(?&lt;![oO])ok(?!e)"</span>: <span class="hljs-string">"onk"</span>,
    <span class="hljs-string">"(?&lt;=\\b[b-df-hj-np-tv-z]+)ik(?!e)"</span>: <span class="hljs-string">"ink"</span>,
    <span class="hljs-string">"(?&lt;![a])ak(?!e)"</span>: <span class="hljs-string">"ank"</span>,
    <span class="hljs-string">"(?&lt;!([ie]|\\b[gb]))ek(?!e)"</span>: <span class="hljs-string">"enk"</span>,
    <span class="hljs-string">"(?&lt;=\\b[gb])ek(?=\\b)"</span>: <span class="hljs-string">"enk"</span>, <span class="hljs-comment">// wel: gek, niet: gekend</span>
    <span class="hljs-string">"(?&lt;=[aoi])pp"</span> : <span class="hljs-string">"mp"</span>,
    <span class="hljs-string">"(?&lt;=[aoi])(?&lt;!(oo|eo))p(?!e(n|r))"</span> : <span class="hljs-string">"mp"</span>
  };
</code></pre> </details> <hr/> <h3 id="download">Download</h3> <ul> <li>Download de extensie voor¬†<a href="https://chrome.google.com/webstore/detail/lenker/ankggggimbkoobmifkbglbnegnbndbgn"><i class="fab fa-chrome"></i> Google Chrome</a>!</li> <li>Ook beschikbaar voor¬†<a href="https://addons.mozilla.org/nl/firefox/addon/lenker"> <i class="fab fa-firefox"></i> FireFox</a></li> <li>Lenker heeft z‚Äôn eigen site, inclusief snelverlenkeraar:¬†<a href="http://lenker.nl/">lenker.nl</a></li> </ul>]]></content><author><name></name></author><category term="gesodemieter"/><category term="dutch"/><summary type="html"><![CDATA[Maakt het internet malser.]]></summary></entry></feed>