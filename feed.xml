<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://joszuijderwijk.nl/feed.xml" rel="self" type="application/atom+xml"/><link href="https://joszuijderwijk.nl/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-08-21T11:45:49+00:00</updated><id>https://joszuijderwijk.nl/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Smart Traffic Light 3: Full version</title><link href="https://joszuijderwijk.nl/blog/traffic-light-3/" rel="alternate" type="text/html" title="Smart Traffic Light 3: Full version"/><published>2021-03-16T00:00:00+00:00</published><updated>2021-03-16T00:00:00+00:00</updated><id>https://joszuijderwijk.nl/blog/traffic-light-3</id><content type="html" xml:base="https://joszuijderwijk.nl/blog/traffic-light-3/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/full-traffic-light-header-480.webp 480w,/assets/img/full-traffic-light-header-800.webp 800w,/assets/img/full-traffic-light-header-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/full-traffic-light-header.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><a href="https://github.com/joszuijderwijk/smart-traffic-light"><img src="https://img.shields.io/badge/github%20-%20smart--traffic--light-blue?logo=github" alt="Static Badge"/></a> <img src="https://img.shields.io/github/stars/joszuijderwijk/smart-traffic-light" alt="Static Badge"/></p> <p>We’ve previously set up an IoT Framework and created a prototype traffic light. Now, let’s take it to the next level by building a full-size traffic light that displays our rowing club’s current rowing ban status. This upgraded version will feature:</p> <ul> <li>Various animations, including a party mode</li> <li>Web app control</li> <li>Manual control via a physical button</li> </ul> <details> <summary>Manual (Dutch)</summary> <p>De handleiding voor Orca vind je <a href="../../assets/files/stoplicht-handleiding_gelakt.pdf">hier</a>.</p> </details> <h2 id="hardware">Hardware</h2> <h3 id="components">Components</h3> <p>For this project, we’ll need:</p> <ul> <li>1x Full-size traffic light</li> <li>1x <a href="https://nl.aliexpress.com/item/4000055280006.html">NodeMCU V3</a> (or similar)</li> <li>3x <a href="https://nl.aliexpress.com/item/4000956019162.html">Relay modules</a></li> <li>1x <a href="https://nl.aliexpress.com/item/33022245121.html">HLK-PM01 AC-DC Power supply</a></li> <li>1x Push button</li> <li>1x Power switch</li> <li>1x Junction box</li> <li>Installation wire</li> </ul> <p>I bought a full size traffic light via <a href="https://www.marktplaats.nl/">Marktplaats</a> (similar to Ebay) for €110. After replacing the light bulbs with LEDs, it was ready for the next steps.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/full-traffic-light-1-480.webp 480w,/assets/img/full-traffic-light-1-800.webp 800w,/assets/img/full-traffic-light-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/full-traffic-light-1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/full-traffic-light-2-480.webp 480w,/assets/img/full-traffic-light-2-800.webp 800w,/assets/img/full-traffic-light-2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/full-traffic-light-2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 1: The Traffic Light </div> <h3 id="controlling-the-lights">Controlling the Lights</h3> <p>You’ll probably find that the lights of your traffic light are wired in such a way that all lights turn on when you give it power. To be able to have some control over the individual lights instead of them all turning on at once, we’ll use a microcontroller and relay modules. It’s all very similar to the way we designed our <a href="smart-traffic-light-2">prototype</a>, although instead of addressing our LEDs directly, we’ll be using a relay.</p> <p>The relay module we use accepts an input (0V LOW - 5V HIGH) that is sent by our microcontroller. If you pull the input pin (<strong>IN</strong>) high, the terminals <strong>NO</strong> (normaly open) and <strong>COM</strong> (common) will be connected, while <strong>COM</strong> and <strong>NC</strong> (normally closed) will be connected if the input pin is low. The labels on the PCB might be in Chinese (see Figure 2) so make sure you use a multimeter to check the terminals.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/relay-480.webp 480w,/assets/img/relay-800.webp 800w,/assets/img/relay-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/relay.png" class="img-fluid small-img rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 2: The Relay Module. </div> <p>We’ll connect everything according to the wiring diagram below. Note that the diagram also includes the power switch and the control button.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Schematic_Stoplicht-2_2021-02-20-1.svg-480.webp 480w,/assets/img/Schematic_Stoplicht-2_2021-02-20-1.svg-800.webp 800w,/assets/img/Schematic_Stoplicht-2_2021-02-20-1.svg-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Schematic_Stoplicht-2_2021-02-20-1.svg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 3: The Wiring Diagram. </div> <h3 id="controller">Controller</h3> <p>Let’s first make the small connections. I wanted to have the NodeMCU and the relay boards all on one board. The male header pins of the relay boards faced upwards. So I desoldered them and reinstalled them the other way around.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/relay-loose-connection.mp4" class="img-fluid small-img rounded z-depth-1" width="auto" height="auto" controls=""/> </figure> </div> </div> <div class="caption"> Video 1: Loose connections on the relay module </div> <p>Somehow that didn’t go well. The new pins didn’t work and I practically ruined all of my relay boards. Since I didn’t want to wait for new ones, I decided to get rid of all of the control logic on the module and recreate it myself. For that purpose I used a standard BC547 transistor with a 1K ohm resistor and a 1N4007 flyback diode.</p> <p>I made it unnecessarily difficult for myself in the first place by insisting on placing all the components on one board. It’s a whole lot easier to just glue the relay boards directly into the junction box. But I couldn’t go back as I hadn’t any spare parts laying around, so I glued the relay components to the board. The final result looked like this:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/relays-wired-up-1-480.webp 480w,/assets/img/relays-wired-up-1-800.webp 800w,/assets/img/relays-wired-up-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/relays-wired-up-1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/relays-wired-up-2-480.webp 480w,/assets/img/relays-wired-up-2-800.webp 800w,/assets/img/relays-wired-up-2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/relays-wired-up-2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 4: The relay boards are wired up </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/testing-the-circuit.mp4" class="img-fluid small-img rounded z-depth-1" width="auto" height="auto" controls=""/> </figure> </div> </div> <div class="caption"> Video 2: Testing the circuit </div> <p>The push button is connected to a GPIO and GND. Using the internal pull-up (this is done in code) we can detect whether the button is pressed.</p> <h3 id="the-lights">The Lights</h3> <p>While I was working on the relay boards, my friend Marte wired up the lights according to the schematic in Figure 3.</p> <p>We inserted the microcontroller into the junction box. It was a bit of a hassle to screw all of the installation wires into the terminals because of the lack of space left in the junction box.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/inside-1-480.webp 480w,/assets/img/inside-1-800.webp 800w,/assets/img/inside-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/inside-1.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/inside-2-480.webp 480w,/assets/img/inside-2-800.webp 800w,/assets/img/inside-2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/inside-2.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 5: All of the electonics inside the traffic light </div> <p>As you can see, the Hi-Link AC-DC module is placed outside of the box. This is definitely not the ideal way to attach the module to the case, but the traffic light is not intended for outdoor use anyway.</p> <p>Aaaaaaaaand it works! Admittedly not after one try… I accidently swapped the green and the red light, so I had to fix that programmatically.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <video src="/assets/video/testing-the-light.mp4" class="img-fluid small-img rounded z-depth-1" width="auto" height="auto" controls=""/> </figure> </div> </div> <div class="caption"> Video 3: It works </div> <h2 id="software">Software</h2> <p>Now we got the hardware part out of the way, we still needed software to drive the traffic light.</p> <p>The traffic light has the following features:</p> <ul> <li>Current rowing ban display (<em>rowing ban mode</em>)</li> <li>Various animations</li> <li>Manual and remote control</li> <li>Over-the-air (OTA) firmware updates</li> <li>WiFi configuration via WiFiManager</li> <li>Time-based on/off scheduling</li> <li>Toggle green light to save energy</li> </ul> <p>I already discussed and implemented some of these feature in the prototype (MQTT connection, WiFi manager, some animations). In this post I’ll focus on the new features.</p> <div class="alert alert-primary" role="alert"> <p><i class="fab fa-github fa-xl"></i> The full source code for driving the traffic light is available on <a href="https://github.com/joszuijderwijk/smart-traffic-light/blob/main/stoplicht.ino">GitHub</a>.</p> </div> <h3 id="animations">Animations</h3> <p>Since the traffic light is placed inside, I wanted to add animation effects so that it could be used while partying or as a decorative light. I included the following animations:</p> <ul> <li>Party mode (flashy animation)</li> <li>Random mode (lights turn on/off randomly)</li> <li>Off mode (all lights off)</li> <li>On mode (all lights on)</li> </ul> <p>I implemented the animations as a nested array of booleans, each representing the state of one light. The <em>random</em> animation, for example, is implemented the following way:</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">randomAnimation</span><span class="p">(){</span>
  <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">random</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
  <span class="n">setLights</span><span class="p">(</span><span class="n">r</span> <span class="o">%</span> <span class="mi">2</span><span class="p">,</span> <span class="n">r</span> <span class="o">%</span> <span class="mi">3</span><span class="p">,</span> <span class="n">r</span> <span class="o">%</span> <span class="mi">4</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div> <p>Note that in the implementation above at least one light is always on.</p> <h3 id="manual-control">Manual control</h3> <p>A big red push button on the side allows users to interact with the traffic light:</p> <ul> <li>Short press: Toggles the green light in ‘rowing ban mode’</li> <li>Long press: Enters ‘animation mode’, allowing users to cycle through animations.</li> </ul> <h3 id="remote-control">Remote control</h3> <p>I built a simple dashboard using Node-RED for remote access and added a timer function for scheduling. It’s generally a good idea to make your devices modular to allow for future expansion of functionality.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/traffic-light-dashboard-480.webp 480w,/assets/img/traffic-light-dashboard-800.webp 800w,/assets/img/traffic-light-dashboard-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/traffic-light-dashboard.png" class="img-fluid small-img rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 6: Dashboard </div> <h3 id="ota-updates">OTA Updates</h3> <p>Taking apart the whole thing for a software update is a very tedious task. Luckily we have Over The Air (OTA) updates. This practically means that you can upload new firmware through WiFi to your microcontroller.</p> <p>For that purpose, I used <a href="https://flows.nodered.org/flow/888b4cd95250197eb429b2f40d188185">this Node-RED flow</a> (modified) together with <a href="https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266httpUpdate/src/ESP8266httpUpdate.h">this library</a>. The latter makes it possible to send a HTTP request to an update server (our Node-RED server!) to ask whether an update is available. It sends its current firmware version that is hardcoded. If the server version is higher, the server will respond with the firmware update. Note that the <a href="https://github.com/espressif/arduino-esp32/tree/master/libraries/WiFiClientSecure">WiFiClientSecure</a> library is needed when requesting updates from a HTTPS server.</p> <p>Now, to be able to update OTA, you have to trigger the update check. I added an MQTT topic (<code class="language-plaintext highlighter-rouge">vvb/update</code>) that leads to the device checking for updates whenever a message is sent to it.</p> <p>I added the logic for checking the right name of the firmware and the MQTT topic that serves as the update topic (this could also be achieved by specifying the firmware name into a single, defined update topic). This makes it possible to update multiple devices running different firmware. Note that it is also possible to update multiple devices running the same firmware. The JSON file below is an example of a configuration file that I use for the OTA system.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
   </span><span class="nl">"settings"</span><span class="p">:[</span><span class="w">
      </span><span class="p">{</span><span class="w">
         </span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"stoplicht"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"topic"</span><span class="p">:</span><span class="s2">"vvb/update"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"latest"</span><span class="p">:{</span><span class="w">
            </span><span class="nl">"version"</span><span class="p">:</span><span class="s2">"1.0"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"file"</span><span class="p">:</span><span class="s2">"/data/firmware/stoplicht/stoplicht_1.0.bin"</span><span class="w">
         </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
   </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>So, if you want to roll out a firmware update, it’s as easy as doing the following steps:</p> <ol> <li>Compile the source code to a .bin file</li> <li>Upload the .bin file to the destined folder on your server</li> <li>Edit the JSON file and also upload it to your server</li> <li>Trigger the updater of the traffic light</li> </ol> <p>Steps 2 and 3 could be automated by adding a file uploader to the update system. The full flow is included below.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"e9377d19.816dc"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"http in"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Receive Update Request"</span><span class="p">,</span><span class="nl">"url"</span><span class="p">:</span><span class="s2">"update"</span><span class="p">,</span><span class="nl">"method"</span><span class="p">:</span><span class="s2">"get"</span><span class="p">,</span><span class="nl">"upload"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"swaggerDoc"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">130</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">320</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"8551578f.8af5d8"</span><span class="p">,</span><span class="s2">"a1ae8f2d.f63a1"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"30fd7c07.857824"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"mqtt out"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Update message"</span><span class="p">,</span><span class="nl">"topic"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"qos"</span><span class="p">:</span><span class="s2">"1"</span><span class="p">,</span><span class="nl">"retain"</span><span class="p">:</span><span class="s2">"true"</span><span class="p">,</span><span class="nl">"broker"</span><span class="p">:</span><span class="s2">"e7ca3249.6ee4f"</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1070</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">200</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"44277341.eff32c"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"inject"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Trigger update"</span><span class="p">,</span><span class="nl">"props"</span><span class="p">:[{</span><span class="nl">"p"</span><span class="p">:</span><span class="s2">"name"</span><span class="p">,</span><span class="nl">"v"</span><span class="p">:</span><span class="s2">"stoplicht"</span><span class="p">,</span><span class="nl">"vt"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">}],</span><span class="nl">"repeat"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"crontab"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"once"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"onceDelay"</span><span class="p">:</span><span class="mf">0.1</span><span class="p">,</span><span class="nl">"topic"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">120</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">160</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"eb57067c.d5d248"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"8551578f.8af5d8"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"switch"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Check user agent"</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">"req.headers.user-agent"</span><span class="p">,</span><span class="nl">"propertyType"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"rules"</span><span class="p">:[{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"neq"</span><span class="p">,</span><span class="nl">"v"</span><span class="p">:</span><span class="s2">"ESP8266-http-Update"</span><span class="p">,</span><span class="nl">"vt"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">},{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"else"</span><span class="p">}],</span><span class="nl">"checkall"</span><span class="p">:</span><span class="s2">"false"</span><span class="p">,</span><span class="nl">"repair"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"outputs"</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">390</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">320</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"68f30d59.fc2a84"</span><span class="p">],[</span><span class="s2">"ff42fb92.516148"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"68f30d59.fc2a84"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"change"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Forbidden"</span><span class="p">,</span><span class="nl">"rules"</span><span class="p">:[{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"set"</span><span class="p">,</span><span class="nl">"p"</span><span class="p">:</span><span class="s2">"statusCode"</span><span class="p">,</span><span class="nl">"pt"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">"403"</span><span class="p">,</span><span class="nl">"tot"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">},{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"set"</span><span class="p">,</span><span class="nl">"p"</span><span class="p">:</span><span class="s2">"payload"</span><span class="p">,</span><span class="nl">"pt"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">"Forbidden"</span><span class="p">,</span><span class="nl">"tot"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">}],</span><span class="nl">"action"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"from"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"reg"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1040</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">320</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"132eb487.bc16fb"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"132eb487.bc16fb"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"http response"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Response"</span><span class="p">,</span><span class="nl">"statusCode"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"headers"</span><span class="p">:{},</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1340</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">360</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"ee2df76.ef08808"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"change"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"No Update"</span><span class="p">,</span><span class="nl">"rules"</span><span class="p">:[{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"set"</span><span class="p">,</span><span class="nl">"p"</span><span class="p">:</span><span class="s2">"statusCode"</span><span class="p">,</span><span class="nl">"pt"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">"304"</span><span class="p">,</span><span class="nl">"tot"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">}],</span><span class="nl">"action"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"from"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"reg"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1050</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">360</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"132eb487.bc16fb"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"9894e289.9dab4"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"file in"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Load Firmware"</span><span class="p">,</span><span class="nl">"filename"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"format"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"sendError"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1000</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">500</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"b4cc75ad.14d338"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"70aba325.bf515c"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"catch"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"File error"</span><span class="p">,</span><span class="nl">"scope"</span><span class="p">:[</span><span class="s2">"9894e289.9dab4"</span><span class="p">],</span><span class="nl">"uncaught"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1040</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">420</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"1b28cf87.fcf9e"</span><span class="p">,</span><span class="s2">"ee2df76.ef08808"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"1b28cf87.fcf9e"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"debug"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Firmware file error"</span><span class="p">,</span><span class="nl">"active"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="nl">"tosidebar"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="nl">"console"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"tostatus"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"complete"</span><span class="p">:</span><span class="s2">"error"</span><span class="p">,</span><span class="nl">"targetType"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"statusVal"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"statusType"</span><span class="p">:</span><span class="s2">"auto"</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1370</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">440</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"ff42fb92.516148"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"file in"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Load settings"</span><span class="p">,</span><span class="nl">"filename"</span><span class="p">:</span><span class="s2">"/data/firmware/settings.json"</span><span class="p">,</span><span class="nl">"format"</span><span class="p">:</span><span class="s2">"utf8"</span><span class="p">,</span><span class="nl">"sendError"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">490</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">400</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"d019f6b2.34a7a8"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"d019f6b2.34a7a8"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"json"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">"payload"</span><span class="p">,</span><span class="nl">"action"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"pretty"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">630</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">400</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"452789ce.c201f8"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"eb57067c.d5d248"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"file in"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Load settings"</span><span class="p">,</span><span class="nl">"filename"</span><span class="p">:</span><span class="s2">"/data/firmware/settings.json"</span><span class="p">,</span><span class="nl">"format"</span><span class="p">:</span><span class="s2">"utf8"</span><span class="p">,</span><span class="nl">"sendError"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">290</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">160</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"a0ecf9f0.626ef8"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"a0ecf9f0.626ef8"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"json"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">"payload"</span><span class="p">,</span><span class="nl">"action"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"pretty"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">430</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">160</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"e165242f.f922f8"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"8f069645.1a3b58"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"comment"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"info"</span><span class="p">:</span><span class="s2">"Vergeet niet in te stellen welke firmware er moet worden geüpdatet!</span><span class="se">\n\n</span><span class="s2">Neem bij vragen contact op met [Jos Zuijderwijk](mailto:hoi@joszuijderwijk.nl)."</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">110</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">120</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"e165242f.f922f8"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"function"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"find fw data"</span><span class="p">,</span><span class="nl">"func"</span><span class="p">:</span><span class="s2">"for (var i in msg.payload.settings){</span><span class="se">\n</span><span class="s2"> var item = msg.payload.settings[i]</span><span class="se">\n</span><span class="s2"> if (item.name == msg.name){</span><span class="se">\n</span><span class="s2"> msg.payload = item;</span><span class="se">\n</span><span class="s2"> return msg;</span><span class="se">\n</span><span class="s2"> }</span><span class="se">\n</span><span class="s2">}</span><span class="se">\n\n</span><span class="s2">// not found! error</span><span class="se">\n</span><span class="s2">msg.payload = </span><span class="se">\"</span><span class="s2">404</span><span class="se">\"</span><span class="s2">;</span><span class="se">\n</span><span class="s2">return msg;"</span><span class="p">,</span><span class="nl">"outputs"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="nl">"noerr"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nl">"initialize"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"finalize"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">590</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">160</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"f1531d6a.0657d"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"f1531d6a.0657d"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"switch"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"found?"</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">"payload"</span><span class="p">,</span><span class="nl">"propertyType"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"rules"</span><span class="p">:[{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"eq"</span><span class="p">,</span><span class="nl">"v"</span><span class="p">:</span><span class="s2">"404"</span><span class="p">,</span><span class="nl">"vt"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">},{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"else"</span><span class="p">}],</span><span class="nl">"checkall"</span><span class="p">:</span><span class="s2">"true"</span><span class="p">,</span><span class="nl">"repair"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"outputs"</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">730</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">160</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"cc91223e.9aec2"</span><span class="p">],[</span><span class="s2">"baa0a8e0.734d98"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"cc91223e.9aec2"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"debug"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Not found!"</span><span class="p">,</span><span class="nl">"active"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"tosidebar"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="nl">"console"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"tostatus"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"complete"</span><span class="p">:</span><span class="s2">"true"</span><span class="p">,</span><span class="nl">"targetType"</span><span class="p">:</span><span class="s2">"full"</span><span class="p">,</span><span class="nl">"statusVal"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"statusType"</span><span class="p">:</span><span class="s2">"auto"</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">890</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">120</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"baa0a8e0.734d98"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"change"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"rules"</span><span class="p">:[{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"set"</span><span class="p">,</span><span class="nl">"p"</span><span class="p">:</span><span class="s2">"topic"</span><span class="p">,</span><span class="nl">"pt"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">"payload.topic"</span><span class="p">,</span><span class="nl">"tot"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">},{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"set"</span><span class="p">,</span><span class="nl">"p"</span><span class="p">:</span><span class="s2">"payload"</span><span class="p">,</span><span class="nl">"pt"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">"payload.latest.version"</span><span class="p">,</span><span class="nl">"tot"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">}],</span><span class="nl">"action"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"from"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"reg"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">880</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">200</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"30fd7c07.857824"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"452789ce.c201f8"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"function"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"check fw data"</span><span class="p">,</span><span class="nl">"func"</span><span class="p">:</span><span class="s2">"var fw = JSON.parse(msg.req.headers[</span><span class="se">\"</span><span class="s2">x-esp8266-version</span><span class="se">\"</span><span class="s2">]);</span><span class="se">\n\n</span><span class="s2">for (var i in msg.payload.settings){</span><span class="se">\n</span><span class="s2"> var item = msg.payload.settings[i]</span><span class="se">\n</span><span class="s2"> if (item.name == fw.name){</span><span class="se">\n</span><span class="s2"> </span><span class="se">\n</span><span class="s2"> //check version</span><span class="se">\n</span><span class="s2"> if (item.version == fw.version){</span><span class="se">\n</span><span class="s2"> msg.payload = </span><span class="se">\"</span><span class="s2">304</span><span class="se">\"</span><span class="s2">;</span><span class="se">\n</span><span class="s2"> return msg;</span><span class="se">\n</span><span class="s2"> }else{</span><span class="se">\n</span><span class="s2"> msg.filename = item.latest.file;</span><span class="se">\n</span><span class="s2"> msg.req = fw;</span><span class="se">\n</span><span class="s2"> return msg;</span><span class="se">\n</span><span class="s2"> }</span><span class="se">\n\n</span><span class="s2"> }</span><span class="se">\n</span><span class="s2">}</span><span class="se">\n\n</span><span class="s2">// not found! error</span><span class="se">\n</span><span class="s2">msg.payload = </span><span class="se">\"</span><span class="s2">404</span><span class="se">\"</span><span class="s2">;</span><span class="se">\n</span><span class="s2">return msg;"</span><span class="p">,</span><span class="nl">"outputs"</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="nl">"noerr"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nl">"initialize"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"finalize"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">620</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">460</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"6664c2.0ab02b4"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"6664c2.0ab02b4"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"switch"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"check version"</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">"payload"</span><span class="p">,</span><span class="nl">"propertyType"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"rules"</span><span class="p">:[{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"eq"</span><span class="p">,</span><span class="nl">"v"</span><span class="p">:</span><span class="s2">"404"</span><span class="p">,</span><span class="nl">"vt"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">},{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"eq"</span><span class="p">,</span><span class="nl">"v"</span><span class="p">:</span><span class="s2">"304"</span><span class="p">,</span><span class="nl">"vt"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">},{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"else"</span><span class="p">}],</span><span class="nl">"checkall"</span><span class="p">:</span><span class="s2">"true"</span><span class="p">,</span><span class="nl">"repair"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"outputs"</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">840</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">400</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"ee2df76.ef08808"</span><span class="p">],[</span><span class="s2">"ee2df76.ef08808"</span><span class="p">],[</span><span class="s2">"9894e289.9dab4"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"b4cc75ad.14d338"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"change"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Update!"</span><span class="p">,</span><span class="nl">"rules"</span><span class="p">:[{</span><span class="nl">"t"</span><span class="p">:</span><span class="s2">"set"</span><span class="p">,</span><span class="nl">"p"</span><span class="p">:</span><span class="s2">"statusCode"</span><span class="p">,</span><span class="nl">"pt"</span><span class="p">:</span><span class="s2">"msg"</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">"200"</span><span class="p">,</span><span class="nl">"tot"</span><span class="p">:</span><span class="s2">"str"</span><span class="p">}],</span><span class="nl">"action"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"property"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"from"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"to"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"reg"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">1160</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">500</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[[</span><span class="s2">"132eb487.bc16fb"</span><span class="p">]]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"a1ae8f2d.f63a1"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"debug"</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="s2">"f6336577.1bc9f8"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"active"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="nl">"tosidebar"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="nl">"console"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"tostatus"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"complete"</span><span class="p">:</span><span class="s2">"true"</span><span class="p">,</span><span class="nl">"targetType"</span><span class="p">:</span><span class="s2">"full"</span><span class="p">,</span><span class="nl">"statusVal"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"statusType"</span><span class="p">:</span><span class="s2">"auto"</span><span class="p">,</span><span class="nl">"x"</span><span class="p">:</span><span class="mi">340</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="mi">260</span><span class="p">,</span><span class="nl">"wires"</span><span class="p">:[]},{</span><span class="nl">"id"</span><span class="p">:</span><span class="s2">"e7ca3249.6ee4f"</span><span class="p">,</span><span class="nl">"type"</span><span class="p">:</span><span class="s2">"mqtt-broker"</span><span class="p">,</span><span class="nl">"name"</span><span class="p">:</span><span class="s2">"Orca Broker"</span><span class="p">,</span><span class="nl">"broker"</span><span class="p">:</span><span class="s2">"mqtt.orcaroeien.nl"</span><span class="p">,</span><span class="nl">"port"</span><span class="p">:</span><span class="s2">"1883"</span><span class="p">,</span><span class="nl">"clientid"</span><span class="p">:</span><span class="s2">"Orca IOT"</span><span class="p">,</span><span class="nl">"usetls"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"compatmode"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"keepalive"</span><span class="p">:</span><span class="s2">"60"</span><span class="p">,</span><span class="nl">"cleansession"</span><span class="p">:</span><span class="kc">true</span><span class="p">,</span><span class="nl">"birthTopic"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"birthQos"</span><span class="p">:</span><span class="s2">"0"</span><span class="p">,</span><span class="nl">"birthPayload"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"closeTopic"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"closeQos"</span><span class="p">:</span><span class="s2">"0"</span><span class="p">,</span><span class="nl">"closePayload"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"willTopic"</span><span class="p">:</span><span class="s2">""</span><span class="p">,</span><span class="nl">"willQos"</span><span class="p">:</span><span class="s2">"0"</span><span class="p">,</span><span class="nl">"willPayload"</span><span class="p">:</span><span class="s2">""</span><span class="p">}]</span><span class="w">
</span></code></pre></div></div> <h2 id="result">Result</h2> <p>The final product is a fully functional, full-size smart traffic light that can display rowing ban status, show animations, and be controlled both manually and remotely.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://www.youtube.com/embed/0nWFojlPRRk" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> </div> <div class="caption text-center mt-2"> Video 4: Demo of Party Mode / Random Mode </div>]]></content><author><name></name></author><category term="iot,"/><category term="electronics"/><category term="iot,"/><category term="electronics,"/><category term="traffic-light,"/><category term="diy,"/><category term="esp8266"/><summary type="html"><![CDATA[Building a Full-Size Smart Traffic Light.]]></summary></entry><entry><title type="html">Smart Traffic Light 2: Building the Prototype</title><link href="https://joszuijderwijk.nl/blog/traffic-light-2/" rel="alternate" type="text/html" title="Smart Traffic Light 2: Building the Prototype"/><published>2021-01-27T00:00:00+00:00</published><updated>2021-01-27T00:00:00+00:00</updated><id>https://joszuijderwijk.nl/blog/traffic-light-2</id><content type="html" xml:base="https://joszuijderwijk.nl/blog/traffic-light-2/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/traffic-light-2-480.webp 480w,/assets/img/traffic-light-2-800.webp 800w,/assets/img/traffic-light-2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/traffic-light-2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><a href="https://github.com/joszuijderwijk/smart-traffic-light"><img src="https://img.shields.io/badge/github%20-%20smart--traffic--light-blue?logo=github" alt="Static Badge"/></a> <img src="https://img.shields.io/github/stars/joszuijderwijk/smart-traffic-light" alt="Static Badge"/></p> <p>Welcome back to our smart traffic light series! In the <a href="../traffic-light-1">previous post</a>, we set up an IoT network. Now, it’s time to bring our concept to life with a miniature internet enabled prototype.</p> <h2 id="hardware">Hardware</h2> <p>In the first part of this blogpost we will focus on the hardware of the project. This project is built around the ESP-01 microcontroller. The ESP-01 is a compact Wi-Fi module based on the ESP8266 chip, designed for IoT projects with built-in Wi-Fi capabilities. Unlike larger Arduino boards which offer more GPIO pins and features, the ESP-01 sacrifices some versatility for an extremely small form factor and lower power consumption, making it ideal for simple, space-constrained IoT applications like our mini traffic light.</p> <h3 id="components">Components</h3> <p>These are the parts I used:</p> <ul> <li>1x <a href="https://nl.aliexpress.com/item/1005006422542411.html">Miniature Traffic Light</a></li> <li>1x <a href="https://nl.aliexpress.com/item/32948119527.html">ESP-01s</a></li> <li>1x <a href="https://nl.aliexpress.com/item/1005007333593015.html">Power Cable with Switch</a></li> <li>1x <a href="https://nl.aliexpress.com/item/32880983608.html">5V to 3.3V Stepdown Converter</a></li> <li>1x <a href="https://nl.aliexpress.com/item/1780988271.html">Plastic Case (48 * 26 * 15 mm)</a></li> </ul> <p>In order to program the ESP-01s you also need an <a href="https://nl.aliexpress.com/item/32799975353.html">adapter</a>. It is also possible to use whatever microcontroller with a connection to the internet.</p> <h3 id="power">Power</h3> <p>Our micocontroller runs on 3.3V. Luckily, the LED’s on our miniature traffic light also run without anny hassle on this voltage, so there is no need for resistors. These LED’s can be directly powered by the ESP-01 as they consume very little power.</p> <p>I wanted the whole thing to be powered through a USB cable. Phone chargers and USB ports produce 5V so we need to step that down to 3.3V. I used a small DC-DC buck converter I had lying around. Most converters will be able to do the job, as the whole circuit will only consume ~250mA at max.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p> <h3 id="assembly">Assembly</h3> <p>There it is, fresh from its journey across the seas! This is a common cathode circuit, which means that the shared wire (the black one) has the positive polarity (+3.3V). The GPIOs now function as a <em>sink</em>: when a pin is pulled down to 0V, a current will flow through the LED to the pin. It may be a bit counterintuitive at first, but when we pull a pin LOW, the LED will turn on.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/stoplicht-mini-480.webp 480w,/assets/img/stoplicht-mini-800.webp 800w,/assets/img/stoplicht-mini-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/stoplicht-mini.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 1: Miniature Traffic Light. </div> <p>Assembling our traffic light is straightforward:</p> <ol> <li>Drill a hole in the plastic case for our traffic light and its wires to go through</li> <li>Solder the components onto a piece of perf board, following the wiring diagram in Figure 2</li> </ol> <p>It doesn’t really matter to which of the four GPIO’s (IO0, IO2, RXD, TXD) you connect which LED. This can all be adjusted later programmatically anyway!</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/schematic-stoplicht.svg-480.webp 480w,/assets/img/schematic-stoplicht.svg-800.webp 800w,/assets/img/schematic-stoplicht.svg-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/schematic-stoplicht.svg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 2: Wiring Diagram. </div> <p>I didn’t make it easy by choosing such a small plastic case. It can be really hard to fit all components in. I used bits of kneading glue to sort of fix the board and the traffic light to the case. Furthermore the traffic light comes with extremely thin wire. You can strip this wire using a soldering iron. It might be hard at first to handle these tiny components.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-2"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/inside-prototype-480.webp 480w,/assets/img/inside-prototype-800.webp 800w,/assets/img/inside-prototype-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/inside-prototype.jpg" class="img-fluid small-img rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 3: Inside the Traffic Light. </div> <p>In the figure above you can see all of the components wired up together. The USB cable in this picture looks a bit loose. That’s the case because I took this photo while repairing that connection.</p> <h2 id="software">Software</h2> <p>Now for the fun part – programming our traffic light! Here’s what we want it to do:</p> <ol> <li>Connect to WiFi</li> <li>Connect to our MQTT server</li> <li>Publish its status in the topic <code class="language-plaintext highlighter-rouge">connection/mini-stoplicht</code></li> <li>React to changes in <code class="language-plaintext highlighter-rouge">vvb/status</code></li> <li>Display inbuilt animations</li> </ol> <div class="alert alert-primary" role="alert"> <p><i class="fab fa-github fa-xl"></i> The full source code for driving the miniature traffic light is available on <a href="https://github.com/joszuijderwijk/smart-traffic-light/blob/main/mini_stoplicht.ino">GitHub</a>.</p> </div> <h3 id="control-the-lights">Control the Lights</h3> <p>How to control the lights programmatically? Since we have a common cathode circuit, we’ll have to turn the pins to 0V for our LEDs to turn on. You first have to declare the pins and then set them to OUTPUT to be able to control them. The setup method will be called once upon start.</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// According to our wiring diagram</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">PIN_RED</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">PIN_ORANGE</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">PIN_GREEN</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>

<span class="kt">void</span> <span class="n">setup</span> <span class="p">{</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">PIN_GREEN</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">PIN_ORANGE</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">PIN_RED</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div> <p>Now turning an LED on or off goes like this:</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">digitalWrite</span><span class="p">(</span><span class="n">PIN_RED</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>    <span class="c1">// Turn ON</span>
<span class="n">digitalWrite</span><span class="p">(</span><span class="n">PIN_RED</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>   <span class="c1">// Turn OFF</span>
</code></pre></div></div> <h3 id="wifi">WiFi</h3> <p>We want our traffic light to work anywhere, so hard-coding WiFi credentials is a no-go. Luckily, there exists a library to handle this exact problem: <a href="https://github.com/tzapu/WiFiManager">WiFiManager</a>. That works with the standard <a href="https://github.com/esp8266/Arduino/tree/master/libraries/ESP8266WiFi">ESP8266WiFi library</a>. This neat library creates an access point with a captive portal, allowing users to select their network (see Figure 4). It’s like giving your traffic light its own tiny smartphone setup screen! If you add your details, those are saved into PROGMEM. So even if you restart your device, it will still remember your SSID/password.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-2"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/captive_portal-480.webp 480w,/assets/img/captive_portal-800.webp 800w,/assets/img/captive_portal-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/captive_portal.jpeg" class="img-fluid small-img rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 4: Captive Portal. </div> <p>The library also makes it easy to add custom HTML. I added a custom footer that contains my contact information.</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">WiFiManager</span> <span class="n">wifiManager</span><span class="p">;</span>
  <span class="n">WiFiManagerParameter</span> <span class="nf">custom_text</span><span class="p">(</span><span class="s">"&lt;p&gt;(c) 2019 by &lt;a href=</span><span class="se">\"</span><span class="s">mailto:...</span><span class="se">\"</span><span class="s">&gt;Jos Zuijderwijk&lt;/a&gt;&lt;/p&gt;"</span><span class="p">);</span>
  <span class="n">wifiManager</span><span class="p">.</span><span class="n">addParameter</span><span class="p">(</span><span class="o">&amp;</span><span class="n">custom_text</span><span class="p">);</span>
</code></pre></div></div> <h3 id="mqtt">MQTT</h3> <p>For the MQTT connection I used the <a href="https://github.com/knolleary/pubsubclient">PubSubClient library</a>. You just provide your MQTT details (host, user, password, port) and this library will do the rest. This piece of code connects to the broker, and takes a so-called <em>will message</em>. This message will be sent to the broker if the device suddenly disconnects. The will message I provided is a <strong>retained</strong> ”0” in topic <code class="language-plaintext highlighter-rouge">connection/mini-stoplicht</code>. After first connecting the client will publish a retained “1” in the same topic. This way we can easily see if the device is connected or not. I also let the client subscribe to the <code class="language-plaintext highlighter-rouge">vvb/status</code> topic. That’s the channel the commands will be sent to.</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">WiFiClient</span> <span class="n">wifiClient</span><span class="p">;</span>               <span class="c1">// WiFi</span>
<span class="n">PubSubClient</span> <span class="nf">client</span><span class="p">(</span><span class="n">wifiClient</span><span class="p">);</span>     <span class="c1">// MQTT</span>
    
<span class="k">if</span> <span class="p">(</span><span class="n">client</span><span class="p">.</span><span class="n">connect</span><span class="p">(</span><span class="n">mqtt_client_name</span><span class="p">,</span> <span class="n">mqtt_username</span><span class="p">,</span> <span class="n">mqtt_password</span><span class="p">,</span> <span class="s">"connection/mini-stoplicht"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"0"</span><span class="p">))</span> <span class="p">{</span>
      <span class="c1">// Send Hello World!</span>
      <span class="n">client</span><span class="p">.</span><span class="n">publish</span><span class="p">(</span><span class="s">"connection/mini-stoplicht"</span><span class="p">,</span> <span class="s">"1"</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
      <span class="n">client</span><span class="p">.</span><span class="n">subscribe</span><span class="p">(</span><span class="s">"vvb/status"</span><span class="p">);</span> 
<span class="p">}</span>
</code></pre></div></div> <p>The MQTT callback function, that is the function that is called whenever a message is published to a topic that the client has subscribed to, looks like this.</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">callback</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="n">topic</span><span class="p">,</span> <span class="n">byte</span><span class="o">*</span> <span class="n">payload</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">len</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">String</span> <span class="n">msg</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// payload</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">len</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">msg</span> <span class="o">+=</span> <span class="p">((</span><span class="kt">char</span><span class="p">)</span><span class="n">payload</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="p">}</span>

  <span class="k">if</span> <span class="p">(</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">topic</span><span class="p">,</span> <span class="s">"vvb/status"</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">msg</span> <span class="o">==</span> <span class="s">"0"</span><span class="p">){</span>
      <span class="n">updateLights</span><span class="p">(</span><span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">msg</span> <span class="o">==</span> <span class="s">"1"</span><span class="p">){</span>
      <span class="n">updateLights</span><span class="p">(</span><span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">msg</span> <span class="o">==</span> <span class="s">"2"</span><span class="p">){</span>
      <span class="n">updateLights</span><span class="p">(</span><span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span>
    <span class="p">}</span>  
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p>This will check if the topic name equals to the value we expect (more useful when subscribed to more than one topic). Then it will set the lights using the helper function <code class="language-plaintext highlighter-rouge">updateLights</code>, according to the received value. This function takes three booleans, each representing an LED of the traffic light that is either on or off.</p> <h3 id="user-feedback-animations">User feedback: animations</h3> <p>Now the device basically does what we need. But it’s not user friendly yet. How is a user going to know if the traffic light is not able to connect to the WiFi network? Okay, someone could check if the captive portal is up, but there is no visual indication.</p> <p>One way to solve this is adding animations. If the traffic light is connecting to the WiFi network I want it to go from green-orange-red every 500 milliseconds. If the traffic light has failed to connect, I want the red light to blink every second. The easiest way to implement this is using a <em>Ticker</em>, which is a standard <a href="https://www.arduino.cc/reference/en/libraries/ticker/">library</a> for Arduino. A Ticker executes a given method repeatedly without using the blocking <code class="language-plaintext highlighter-rouge">delay()</code> function.</p> <p>I implemented the animations like this:</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">animationCycle</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="c1">// connecting to wifi animation</span>
<span class="kt">void</span> <span class="nf">startupAnimation</span><span class="p">(){</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">animationCycle</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
      <span class="n">updateLights</span><span class="p">(</span><span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span>
      <span class="n">animationCycle</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">animationCycle</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
      <span class="n">updateLights</span><span class="p">(</span><span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
      <span class="n">animationCycle</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">animationCycle</span> <span class="o">==</span> <span class="mi">2</span><span class="p">){</span>
      <span class="n">updateLights</span><span class="p">(</span><span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
      <span class="n">animationCycle</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">animationCycle</span> <span class="o">==</span> <span class="mi">3</span><span class="p">){</span>
      <span class="n">updateLights</span><span class="p">(</span><span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
      <span class="n">animationCycle</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// access point animation</span>
<span class="kt">void</span> <span class="nf">apAnimation</span><span class="p">(){</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">animationCycle</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
    <span class="n">updateLights</span><span class="p">(</span><span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
    <span class="n">animationCycle</span><span class="o">++</span><span class="p">;</span>
  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="n">updateLights</span><span class="p">(</span><span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
    <span class="n">animationCycle</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p>We then can attach the animation functions to the ticker with a certain interval so it gets called repeatedly.</p> <h2 id="result">Result</h2> <p>The traffic light responds perfectly to the MQTT messages that are sent in the <code class="language-plaintext highlighter-rouge">vvb/status</code> topic. You can easily test that using software like <a href="https://mqtt-explorer.com//">MQTT Explorer</a>. In Figure 5 you will see the animation for “there is no internet connection, an access point has been made” and “trying to connect”.</p> <p>A future improvement could be switching to an encrypted MQTT connection.</p> <p>In the <a href="../traffic-light-3">next and final post</a> we will create a full-fledged internet controlled traffic light.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/animation-1-480.webp 480w,/assets/img/animation-1-800.webp 800w,/assets/img/animation-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/animation-1.gif" class="img-fluid small-img rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> "WiFi Not Found" Animation </div> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/animation-2-480.webp 480w,/assets/img/animation-2-800.webp 800w,/assets/img/animation-2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/animation-2.gif" class="img-fluid small-img rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <div class="caption"> "Connecting" Animation </div> </div> </div> <div class="caption"> Figure 5: Animations </div> <hr/> <div class="footnotes" role="doc-endnotes"> <ol> <li id="fn:1" role="doc-endnote"> <p>The ESP-01 consumes 200mA at maximum power (e.g. while connecting to the internet) according to the datasheet and a typical LED consumes around 20mA. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> </ol> </div>]]></content><author><name></name></author><category term="iot,"/><category term="electronics"/><category term="iot,"/><category term="electronics,"/><category term="traffic-light,"/><category term="diy,"/><category term="esp,"/><category term="esp-01"/><summary type="html"><![CDATA[Creating a miniature internet-enabled traffic light using an ESP-01s microcontroller.]]></summary></entry><entry><title type="html">Smart Traffic Light 1: Setting Up an IoT System</title><link href="https://joszuijderwijk.nl/blog/traffic-light-1/" rel="alternate" type="text/html" title="Smart Traffic Light 1: Setting Up an IoT System"/><published>2021-01-21T00:00:00+00:00</published><updated>2021-01-21T00:00:00+00:00</updated><id>https://joszuijderwijk.nl/blog/traffic-light-1</id><content type="html" xml:base="https://joszuijderwijk.nl/blog/traffic-light-1/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/traffic-light-1-480.webp 480w,/assets/img/traffic-light-1-800.webp 800w,/assets/img/traffic-light-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/traffic-light-1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="introduction">Introduction</h2> <p>Welcome to the first installment of our smart traffic light series! In this post, we’ll explore how to create a simple IoT network for a traffic light system. We’ll cover the basics of setting up the network, and in future posts, we’ll dive into building a <a href="../traffic-light-2">proof of concept</a> and a <a href="../traffic-light-3">full-size version</a> of our smart traffic light.</p> <h2 id="background-the-rowing-ban-system">Background: The Rowing Ban System</h2> <p>As a member of the <em>Webcie</em> at <a href="http://orcaroeien.nl">A.U.S.R. Orca</a>, a student rowing club, I’ve been involved in developing and maintaining the club’s websites. One of our key projects is the <em>Member Portal</em><sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>, which includes a feature for administrators to broadcast rowing bans. These bans indicate whether it’s safe or permitted to row, based on factors like weather conditions or scheduled events.</p> <p>The rowing ban status can be represented by a traffic light system:</p> <ul> <li>🟢 Green: No rowing ban</li> <li>🟠 Orange: Partial rowing ban (e.g., only single sculls allowed)</li> <li>🔴 Red: Full rowing ban (no rowing allowed)</li> </ul> <p>Our goal is to create a physical traffic light that automatically displays the current rowing ban status. This tangible representation will serve as an eye-catching and practical addition to the club’s information system.</p> <h2 id="building-the-iot-network">Building the IoT Network</h2> <p>To bring our smart traffic light to life, we need a robust infrastructure that enables communication between devices. We’ll use the <a href="https://en.wikipedia.org/wiki/MQTT">MQTT</a> (Message Queuing Telemetry Transport) protocol, which is ideal for IoT applications due to its lightweight nature and publish-subscribe model.</p> <h3 id="understanding-mqtt">Understanding MQTT</h3> <p>MQTT revolves around a central server called a <em>broker</em>, which manages communication between connected devices (clients). Here’s a simplified overview of our network:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/traffic-light-diagram-1-480.webp 480w,/assets/img/traffic-light-diagram-1-800.webp 800w,/assets/img/traffic-light-diagram-1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/traffic-light-diagram-1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Figure 1: Schematic overview of the IoT network. </div> <p><strong>Backend</strong>, <strong>Database</strong> and <strong>Frontend</strong> are all components of the previously mentioned member portal. The user (admin) activates a certain rowing ban by pushing a button on the frontend. This triggers an action on the backend, adding the new ban to the database. The frontend now displays the new ban that is stored in the database. These components are specific to the Orca use case and could be replaced by any other system.</p> <p>Both <strong>Traffic Light</strong> (our device) and <strong>Backend</strong> (of the member portal) are clients connected to the broker.</p> <p>MQTT uses <em>topics</em> to organize information. Clients publish messages to specific topics and subscribe to topics they want to receive messages from. For example:</p> <ul> <li>Publishing topic: <code class="language-plaintext highlighter-rouge">bans/status</code></li> <li>Subscription topic: <code class="language-plaintext highlighter-rouge">bans/#</code> (using a wildcard to receive all messages under the “bans” topic)</li> </ul> <p>An important feature of MQTT is the option of <em>retained messages</em>. The broker can save the last message sent to a topic, ensuring new clients receive the most recent information upon connecting. This is crucial for rowing bans; otherwise the device would only be able to detect the rowing ban the moment it changes.</p> <h3 id="setting-up-the-broker">Setting Up the Broker</h3> <p>In the past I’ve been using <a href="https://www.cloudmqtt.com/">CloudMQTT</a> for experimenting, but they recently shut down their free plans (cheapest plan is now $5 per month). <a href="https://myqtthub.com/en">MyQttHub</a>, <a href="https://www.hivemq.com/">HiveMQ</a> and <a href="https://flespi.com/mqtt-broker">Flespi</a> look promising, although I’ve never used any of them.</p> <p>For our project, we’ll use <a href="https://mosquitto.org/">Mosquitto</a>, a popular open-source MQTT broker. While there are cloud-based options available, setting up your own broker provides more control and is cheaper in the long run. Setting up your own broker is fairly easy to do, but it requires some configuration and of course your own server. You can find a tutorial on how to do so using Docker <a href="https://www.homeautomationguy.io/blog/docker-tips/configuring-the-mosquitto-mqtt-docker-container-for-use-with-home-assistant">here</a>.</p> <h3 id="implementing-access-control">Implementing Access Control</h3> <p>To secure our system, we’ll create three user accounts with specific permissions:</p> <ol> <li><strong>webmaster</strong>: Admin account with full access<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup></li> <li><strong>ledenportaal</strong>: Account for the Member Portal</li> <li><strong>orca</strong>: Account for client devices (e.g., the traffic light)</li> </ol> <p>We’ll use an Access Control List (ACL) to restrict these accounts. Here’s a sample ACL configuration:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh"># Admin account</span>
user webmaster
topic readwrite #

<span class="gh"># Member Portal account</span>
user ledenportaal
topic readwrite vvb/status

<span class="gh"># Client devices account</span>
user orca
topic read vvb/status
topic write connection/#
</code></pre></div></div> <p><a href="http://www.steves-internet-guide.com/topic-restriction-mosquitto-configuration/">This blogpost</a> explains ACL for Mosquitto more thoroughly.</p> <h3 id="publishing-the-rowing-ban-status">Publishing the Rowing Ban Status</h3> <p>To integrate the rowing ban system with our MQTT network, we used the <a href="https://github.com/chkr1011/MQTTnet">MQTTnet</a> library in our ASP.NET Core backend. This allows us to publish updates to the broker whenever the rowing ban status changes.</p> <p>Remember, you could take anything as input for your traffic light! For example, it can display the current rowing ban of your own sports club, <a href="https://kanikeenkortebroekaan.nl">kanikeenkortebroekaan.nl</a>, or just have fun toggling it manually.</p> <h2 id="conclusion-and-next-steps">Conclusion and Next Steps</h2> <p>We’ve now laid the groundwork for our smart traffic light system by setting up an IoT network using MQTT. To recap, we’ve covered:</p> <ol> <li>The concept of using a traffic light to display rowing ban status;</li> <li>MQTT basics and network architecture;</li> <li>Setting up an MQTT broker;</li> <li>Implementing access control for security;</li> <li>Publishing rowing ban updates to the network.</li> </ol> <p>In our <a href="../traffic-light-2">next post</a>, we’ll build a prototype of the traffic light, bringing our IoT concept to life. Stay tuned!</p> <hr/> <div class="footnotes" role="doc-endnotes"> <ol> <li id="fn:1" role="doc-endnote"> <p>The member portal (“Ledenportaal”), located at <a href="https://mijn.orcaroeien.nl">mijn.orcaroeien.nl</a>, is a private website for members of the club. It’s used for boat reservations, articles et cetera. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> <li id="fn:2" role="doc-endnote"> <p>With software like <a href="https://mqtt-explorer.com/">MQTT Explorer</a> it’s really easy to send test messages and have an overview of the traffic that goes through your broker <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p> </li> </ol> </div>]]></content><author><name></name></author><category term="iot"/><category term="iot,"/><category term="mqtt,"/><category term="mosquitto,"/><category term="traffic-light"/><summary type="html"><![CDATA[Setting up an IoT network for a smart traffic light.]]></summary></entry><entry><title type="html">Lenker</title><link href="https://joszuijderwijk.nl/blog/lenker/" rel="alternate" type="text/html" title="Lenker"/><published>2020-12-31T00:00:00+00:00</published><updated>2020-12-31T00:00:00+00:00</updated><id>https://joszuijderwijk.nl/blog/lenker</id><content type="html" xml:base="https://joszuijderwijk.nl/blog/lenker/"><![CDATA[<figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/lenker-480.webp 480w,/assets/img/lenker-800.webp 800w,/assets/img/lenker-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/lenker.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>In de kerstvakantie had ik wat tijd om wijselijk te spenderen, dus ik besloot om een extensie voor Chrome te maken. Geïnspireerd op het gamekanaal van <a href="http://speedrunners.nl/">Lekker Spelen</a> en de alom bekende filmpjes van <a href="http://www.mastermovies.nl/">MasterMovies</a>, presenteer ik u: <strong>Lenker</strong>™.</p> <h3 id="maakt-het-internet-malser"><em>Maakt het internet malser</em></h3> <p>Is het niet ‘kinker’ in plaats van ‘kikker’? En is Born to be Alive niet gewoon van The Village People? Vraag jij je ook af waarom deze (en veel meer) van dit soort fouten continu gemaakt worden? Dat snamp ik wel. Met deze extensie wordt het mogelijk om voor eens en voor altijd af te rekenen met deze wijdverbreide misverstanden. Deze puike plugin stelt je ook in staat om bij te houden hoeveel woorden je al hebt verlenkerd. Helemaal niet genk!</p> <h3 id="patronen">Patronen</h3> <p>Deze plugin `verlenkert’ automatisch woorden op alle websites die je bezoekt voor de ultieme leeservaring. Daarvoor gebruik ik een lijstje simpele regex-regels.</p> <details> <summary>Patronen</summary> <pre><code class="lang-javascript"><span class="hljs-keyword">var</span> dict = {
    <span class="hljs-string">"bloemen\\b"</span>: <span class="hljs-string">"bloempies"</span>,     <span class="hljs-comment">//uitzonderingen</span>
    <span class="hljs-string">"harry potter"</span>:<span class="hljs-string">"Barry Pooter"</span>,
    <span class="hljs-string">"private ryan"</span>: <span class="hljs-string">"Private Henk"</span>,
    <span class="hljs-string">"the matrix"</span>:<span class="hljs-string">"The Meetrix"</span>,
    <span class="hljs-string">"patrick hernandez"</span>: <span class="hljs-string">"The Village People"</span>,
    <span class="hljs-string">"bassie en adriaan"</span>: <span class="hljs-string">"Arie en Bastiaan"</span>,
    <span class="hljs-string">"knight rider"</span>:<span class="hljs-string">"Nicht Rijder"</span>,
    <span class="hljs-string">"eminem"</span>:<span class="hljs-string">"Aminam"</span>,
    <span class="hljs-string">"baywatch"</span>:<span class="hljs-string">"Zeebats"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)kk"</span>: <span class="hljs-string">"nk"</span>,           <span class="hljs-comment">// patronen</span>
    <span class="hljs-string">"(?&lt;=\\w+)ck"</span>: <span class="hljs-string">"nck"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)kje"</span>: <span class="hljs-string">"nkie"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)pje"</span>: <span class="hljs-string">"mpie"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)oek"</span> : <span class="hljs-string">"oenk"</span>,
    <span class="hljs-string">"(?&lt;=\\b[b-df-hj-np-tv-z]+)ut(t?)"</span> : <span class="hljs-string">"unt"</span>,
    <span class="hljs-string">"(?&lt;!aa)(?&lt;=a)dd"</span> : <span class="hljs-string">"nd"</span>,
    <span class="hljs-string">"(?&lt;![aa|\\b\W+])(?&lt;=a)d(?!e)"</span> : <span class="hljs-string">"nd"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)esse\\b"</span> : <span class="hljs-string">"ense"</span>,
    <span class="hljs-string">"(?&lt;=\\b[b-df-hj-np-tv-z]+)arr(?=(y|ie))(?!y\\040pooter)"</span>:<span class="hljs-string">"anr"</span>,
    <span class="hljs-string">"(?&lt;!(bro|ho))(?&lt;=\\b[b-df-hj-np-tv-z]*o)s(s?)\\b"</span> : <span class="hljs-string">"ns"</span>,
    <span class="hljs-string">"(?&lt;=\\w+)ott(?=\\w+)"</span>:<span class="hljs-string">"ont"</span>,
    <span class="hljs-string">"(?&lt;![oO])ok(?!e)"</span>: <span class="hljs-string">"onk"</span>,
    <span class="hljs-string">"(?&lt;=\\b[b-df-hj-np-tv-z]+)ik(?!e)"</span>: <span class="hljs-string">"ink"</span>,
    <span class="hljs-string">"(?&lt;![a])ak(?!e)"</span>: <span class="hljs-string">"ank"</span>,
    <span class="hljs-string">"(?&lt;!([ie]|\\b[gb]))ek(?!e)"</span>: <span class="hljs-string">"enk"</span>,
    <span class="hljs-string">"(?&lt;=\\b[gb])ek(?=\\b)"</span>: <span class="hljs-string">"enk"</span>, <span class="hljs-comment">// wel: gek, niet: gekend</span>
    <span class="hljs-string">"(?&lt;=[aoi])pp"</span> : <span class="hljs-string">"mp"</span>,
    <span class="hljs-string">"(?&lt;=[aoi])(?&lt;!(oo|eo))p(?!e(n|r))"</span> : <span class="hljs-string">"mp"</span>
  };
</code></pre> </details> <hr/> <h3 id="download">Download</h3> <ul> <li>Download de extensie voor <a href="https://chrome.google.com/webstore/detail/lenker/ankggggimbkoobmifkbglbnegnbndbgn"><i class="fab fa-chrome"></i> Google Chrome</a>!</li> <li>Ook beschikbaar voor <a href="https://addons.mozilla.org/nl/firefox/addon/lenker"> <i class="fab fa-firefox"></i> FireFox</a></li> <li>Lenker heeft z’n eigen site, inclusief snelverlenkeraar: <a href="http://lenker.nl/">lenker.nl</a></li> </ul>]]></content><author><name></name></author><category term="gesodemieter"/><category term="dutch"/><summary type="html"><![CDATA[Maakt het internet malser.]]></summary></entry></feed>